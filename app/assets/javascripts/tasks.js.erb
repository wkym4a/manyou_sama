
<% environment.context_class.instance_eval { include ApplicationHelper } %>
<% environment.context_class.instance_eval { include SessionsHelper } %>

$(document).ready(function(){
// function setup() {

    $('#datetimepicker4').datetimepicker({
        format: 'L'
    });

    //↓from〜toのtoで使用
    $('#datetimepicker4_2').datetimepicker({
        format: 'L'
    });

//テキストボックスオブジェクトを取得する
// ↑……ユーザーコードを入力したら、該当するユーザー名を取得して表示する、というのを
// やりたかったけど、難しそう（jsの値を、そのまま『jsに埋め込んだruby』に渡せないっぽい）のでいったん保留。
//→20190501コメントアウトしてもルビーコードが生きているようなので、コード自体をいったん削除した。

    //テーブル内に配置するソート（実質はorder_by条件を変えた再検索）用の動作（起動はjs) は、
    //非同期による読み込み時に再読込されるよう、「views/tasks/index_box.js.erb」でも記述する。
    $('.btn_sort').click(function() {

      var sort_info_box = document.getElementById("sort_type_hidden");
      sort_info_box.value = this.id;

      var btn_search = document.getElementById("btn_search_tasks");
      btn_search.click();
    });

// // 画面表示時、検索牡丹を押す（ことで、全件検索を実行
// →削除（後の検索画面表示）時にメッセージが消えるので、中止……全件検索は「new」のコントローラー内で行う
//   var btn_search = document.getElementById("tasks_created_at_desc");
//   btn_search.click();

});
